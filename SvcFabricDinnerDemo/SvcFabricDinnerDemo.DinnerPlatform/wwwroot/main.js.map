{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Admin/add-restaurant/add-restaurant.component.html","webpack:///./src/app/Admin/add-restaurant/add-restaurant.component.sass","webpack:///./src/app/Admin/add-restaurant/add-restaurant.component.ts","webpack:///./src/app/admin-restaurant/admin-restaurant.component.html","webpack:///./src/app/admin-restaurant/admin-restaurant.component.sass","webpack:///./src/app/admin-restaurant/admin-restaurant.component.ts","webpack:///./src/app/admin/add-dish/add-dish.component.html","webpack:///./src/app/admin/add-dish/add-dish.component.sass","webpack:///./src/app/admin/add-dish/add-dish.component.ts","webpack:///./src/app/admin/add-restaurant-table/add-restaurant-table.component.html","webpack:///./src/app/admin/add-restaurant-table/add-restaurant-table.component.sass","webpack:///./src/app/admin/add-restaurant-table/add-restaurant-table.component.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.sass","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/menucard-administration/menucard-administration.component.html","webpack:///./src/app/admin/menucard-administration/menucard-administration.component.sass","webpack:///./src/app/admin/menucard-administration/menucard-administration.component.ts","webpack:///./src/app/admin/restaurant-detail/restaurant-detail.component.html","webpack:///./src/app/admin/restaurant-detail/restaurant-detail.component.sass","webpack:///./src/app/admin/restaurant-detail/restaurant-detail.component.ts","webpack:///./src/app/admin/restaurant-tables/restaurant-tables.component.html","webpack:///./src/app/admin/restaurant-tables/restaurant-tables.component.sass","webpack:///./src/app/admin/restaurant-tables/restaurant-tables.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.sass","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/kitchen/kitchen/kitchen.component.html","webpack:///./src/app/kitchen/kitchen/kitchen.component.sass","webpack:///./src/app/kitchen/kitchen/kitchen.component.ts","webpack:///./src/app/kitchen/kitchens/kitchens.component.html","webpack:///./src/app/kitchen/kitchens/kitchens.component.sass","webpack:///./src/app/kitchen/kitchens/kitchens.component.ts","webpack:///./src/app/kitchen/select-kitchen/select-kitchen.component.html","webpack:///./src/app/kitchen/select-kitchen/select-kitchen.component.sass","webpack:///./src/app/kitchen/select-kitchen/select-kitchen.component.ts","webpack:///./src/app/order-dish/order-dish.component.html","webpack:///./src/app/order-dish/order-dish.component.sass","webpack:///./src/app/order-dish/order-dish.component.ts","webpack:///./src/app/order-status/order-status.component.html","webpack:///./src/app/order-status/order-status.component.sass","webpack:///./src/app/order-status/order-status.component.ts","webpack:///./src/app/restaurant/restaurant.component.html","webpack:///./src/app/restaurant/restaurant.component.sass","webpack:///./src/app/restaurant/restaurant.component.ts","webpack:///./src/app/restaurants/restaurants.component.html","webpack:///./src/app/restaurants/restaurants.component.sass","webpack:///./src/app/restaurants/restaurants.component.ts","webpack:///./src/app/select-restaurant/select-restaurant.component.html","webpack:///./src/app/select-restaurant/select-restaurant.component.sass","webpack:///./src/app/select-restaurant/select-restaurant.component.ts","webpack:///./src/app/select-table-in-restaurant/select-table-in-restaurant.component.html","webpack:///./src/app/select-table-in-restaurant/select-table-in-restaurant.component.sass","webpack:///./src/app/select-table-in-restaurant/select-table-in-restaurant.component.ts","webpack:///./src/app/selected-table/selected-table.component.html","webpack:///./src/app/selected-table/selected-table.component.sass","webpack:///./src/app/selected-table/selected-table.component.ts","webpack:///./src/app/shared/Controllers.generated.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">Neues Restaurant: </div>\\r\\n\\r\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"save(form.value)\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"name\\\" class=\\\"control-label col-xs-1\\\">Restaurantname</label>\\r\\n        <div class=\\\"col-xs-3\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"name\\\" ngModel [(ngModel)]=\\\"name\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col-xs-4\\\">\\r\\n          <span class=\\\"selected-message\\\">{{message}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col-xs-4\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" id=\\\"button\\\">Anlegen</button> </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n\"","module.exports = \"\"","import {Restaurant, SwaggerException,  AdminClient,   IAdminClient} from '../../shared/Controllers.generated';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'dinner-add-restaurant',\r\n  templateUrl: './add-restaurant.component.html',\r\n  styleUrls: ['./add-restaurant.component.sass']\r\n})\r\nexport class AddRestaurantComponent implements OnInit {\r\n  name: string;\r\n  message: string;\r\n  @Output() restaurantAdded = new EventEmitter<Restaurant>();\r\n\r\n  constructor(private adminClient: AdminClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async save(value: any) {\r\n    const restaurant = new Restaurant();\r\n    restaurant.name = this.name ;\r\n    this.adminClient.create (restaurant).subscribe( addedRestaurant => {\r\n      this.message = 'Restaurant ' + addedRestaurant.name  + '  added';\r\n      this.restaurantAdded.emit(addedRestaurant);\r\n    },\r\n    error  => {\r\n      this.message = 'Fehler beim Speichern ';\r\n      if (error.message) {\r\n        this.message += error.message;\r\n      }\r\n      if (error.status) {\r\n        this.message += ';Status: ' + error.status;\r\n      }\r\n    }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<p>\\r\\n  admin-restaurant works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dinner-admin-restaurant',\r\n  templateUrl: './admin-restaurant.component.html',\r\n  styleUrls: ['./admin-restaurant.component.sass']\r\n})\r\nexport class AdminRestaurantComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"adminNeuesRegister\\\">\\r\\n  <div class=\\\"card-header\\\">Neues Gericht: </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"save(form.value)\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"name\\\" class=\\\"control-label col-xs-1\\\">Gericht</label>\\r\\n        <div class=\\\"col-xs-3\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"name\\\" ngModel [(ngModel)]=\\\"name\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <label for=\\\"description\\\" class=\\\"control-label col-xs-1\\\">Beschreibung</label>\\r\\n        <div class=\\\"col-xs-3\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"description\\\" ngModel [(ngModel)]=\\\"description\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <label for=\\\"imageUrl\\\" class=\\\"control-label col-xs-1\\\">Url Bild </label>\\r\\n        <div class=\\\"col-xs-3\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"imageUrl\\\" ngModel [(ngModel)]=\\\"imageUrl\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <label for=\\\"price\\\" class=\\\"control-label col-xs-1\\\">Preis</label>\\r\\n        <div class=\\\"col-xs-3\\\">\\r\\n          <input type=\\\"number\\\" name=\\\"price\\\" ngModel [(ngModel)]=\\\"price\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col-xs-4\\\">\\r\\n          <span class=\\\"selected-message\\\">{{message}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"col-xs-4\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" id=\\\"button\\\">Anlegen</button> </div>\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {RestaurantAdminClient, Dish} from '../../shared/Controllers.generated';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dinner-add-dish',\r\n  templateUrl: './add-dish.component.html',\r\n  styleUrls: ['./add-dish.component.sass']\r\n})\r\nexport class AddDishComponent implements OnInit {\r\n  @Input() restaurantId: string;\r\n  @Output() dishAdded = new EventEmitter < Dish >();\r\n  name: string;\r\n  message: string;\r\n  price: number;\r\n  description: string;\r\n  imageUrl: string;\r\n\r\n\r\n  constructor(private restaurantAdminClient: RestaurantAdminClient) { }\r\n\r\n  save (value: any) {\r\n    const dish = new Dish();\r\n    dish.name = this.name;\r\n    dish.price = this.price;\r\n    dish.description = this.description;\r\n    dish.imageUrl = this.imageUrl;\r\n      this.restaurantAdminClient.addDish(this.restaurantId, dish).subscribe(\r\n        (result) => {\r\n            this.dishAdded.emit ( result );\r\n        },\r\n        (error) => {\r\n            console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"adminNeuesRegister\\\">\\r\\n    <div class=\\\"card-header\\\">Neuer Tisch:</div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"save(form.value)\\\" class=\\\"form-horizontal\\\">\\r\\n\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\" class=\\\"control-label col-xs-1\\\">Tischnummer:</label>\\r\\n                <div class=\\\"col-xs-1\\\">\\r\\n                  <input type=\\\"text\\\" name=\\\"tablenr\\\" ngModel [(ngModel)]=\\\"tablenr\\\" class=\\\"form-control \\\">\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-xs-4\\\">\\r\\n                  <span class=\\\"selected-message\\\">{{message}}</span>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-xs-4\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" id=\\\"button\\\">Anlegen</button> </div>\\r\\n              </div>\\r\\n            </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {RestaurantTable, RestaurantAdminClient} from '../../shared/Controllers.generated';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'dinner-add-restaurant-table',\r\n  templateUrl: './add-restaurant-table.component.html',\r\n  styleUrls: ['./add-restaurant-table.component.sass']\r\n})\r\nexport class AddRestaurantTableComponent implements OnInit {\r\n  @Input() restaurantId: string;\r\n  @Output() tableAdded = new EventEmitter<RestaurantTable>();\r\n  message: string;\r\n  tablenr: number;\r\n\r\n  constructor(private restaurantAdminClient: RestaurantAdminClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  async save(value: any) {\r\n    const table = new RestaurantTable();\r\n    table.tablenr = this.tablenr ;\r\n\r\n    this.restaurantAdminClient.createTable (this.restaurantId, table).subscribe( addedTable => {\r\n      this.message = 'Tisch ' + addedTable.tablenr + ' wurde hinzugefügt';\r\n      this.tableAdded.emit(addedTable);\r\n    },\r\n    error  => {\r\n      this.message = 'Fehler beim Speichern ';\r\n      if (error.message) {\r\n        this.message += error.message;\r\n      }\r\n      if (error.status) {\r\n        this.message += ';Status: ' + error.status;\r\n      }\r\n    }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card col-12\\\" style=\\\"border: 0px solid white\\\">\\r\\n  <h3>Administration</h3>\\r\\n\\r\\n  <div class=\\\"card col-6\\\" style=\\\"border: 0px\\\">\\r\\n  <dinner-add-restaurant (restaurantAdded)=\\\"restaurantAdded($event)\\\"></dinner-add-restaurant>\\r\\n  </div><br/>\\r\\n\\r\\n  <div [hidden]='restaurants.length == 0' class=\\\"col-12\\\">\\r\\n      <div class=\\\"card-header col-6\\\">Anzahl Restaurants: {{restaurants.length}}</div> <br/>\\r\\n\\r\\n      <div class=\\\"card  mb-6\\\" *ngFor=\\\"let restaurant of restaurants\\\" style=\\\"background-color: #d7dae0\\\">\\r\\n          <dinner-restaurant-detail [restaurant]=\\\"restaurant\\\"></dinner-restaurant-detail>\\r\\n       </div> \\r\\n  </div>\\r\\n  <br/>\\r\\n  <a [routerLink]=\\\"['/']\\\">Zurück zur Übersicht</a>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"\"","import {RestaurantTable, Restaurant,  AdminClient} from '../shared/Controllers.generated';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dinner-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.sass']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  restaurants: Restaurant[] = [];\r\n\r\n  constructor(private adminClient: AdminClient) { }\r\n\r\n  ngOnInit() {\r\n    this.adminClient.get().subscribe(\r\n      response => this.restaurants = response != null ? response : []\r\n    );\r\n  }\r\n\r\n    restaurantAdded (restaurant: Restaurant) {\r\n      this.restaurants = this.restaurants.concat([restaurant]);\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card-deck\\\">\\r\\n\\r\\n        <div class=\\\"adminTableNumber\\\" *ngFor=\\\"let dish of dishes\\\">\\r\\n          <div class=\\\"card-block\\\">\\r\\n              <img class=\\\"card-img-top\\\" [src]=\\\"dish.imageUrl\\\" [alt]=\\\"dish.name\\\">\\r\\n           <h5 class=\\\"card-title\\\"> {{dish.name}}</h5>\\r\\n           <div class=\\\"card-text\\\">{{dish.description}} €</div>\\r\\n           <div class=\\\"card-text\\\">Preis: {{dish.price}} €</div>\\r\\n          </div>\\r\\n        </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {Dish} from '../../shared/Controllers.generated';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dinner-menucard-administration',\r\n  templateUrl: './menucard-administration.component.html',\r\n  styleUrls: ['./menucard-administration.component.sass']\r\n})\r\nexport class MenucardAdministrationComponent implements OnInit {\r\n  @Input() restaurantId;\r\n  @Input() dishes: Dish[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"card-header\\\">{{restaurant.name}}</div>\\r\\n<div class=\\\"card-body\\\">\\r\\n  <div class=\\\"card-deck\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <p id=\\\"anzahl\\\"><b>{{restaurantTables.length}} Tisch(e)</b></p>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <dinner-add-restaurant-table [restaurantId]=\\\"restaurant.id\\\" (tableAdded)=\\\"restaurantTableAdded($event)\\\"></dinner-add-restaurant-table>\\r\\n        <dinner-restaurant-tables [restaurantId]=\\\"restaurant.id\\\" [restaurantTables]=\\\"restaurantTables\\\"> </dinner-restaurant-tables>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card\\\">\\r\\n      <p id=\\\"anzahl\\\"><b>{{dishes.length}} Gericht(e)</b></p>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <dinner-add-dish [restaurantId]=\\\"restaurant.id\\\" (dishAdded)=\\\"dishAdded($event)\\\"></dinner-add-dish>\\r\\n        <dinner-menucard-administration [restaurantId]=\\\"restaurant.id\\\" [dishes]=\\\"dishes\\\"></dinner-menucard-administration>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <hr>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {Dish, RestaurantAdminClient,  RestaurantTable,   Restaurant} from '../../shared/Controllers.generated';\r\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dinner-restaurant-detail',\r\n  templateUrl: './restaurant-detail.component.html',\r\n  styleUrls: ['./restaurant-detail.component.sass']\r\n})\r\nexport class RestaurantDetailComponent implements OnInit {\r\n  @Input() restaurant: Restaurant;\r\n  restaurantTables: RestaurantTable [];\r\n  dishes: Dish [];\r\n  constructor(private restaurantAdmin: RestaurantAdminClient) { }\r\n\r\n  ngOnInit() {\r\n    this.restaurantTables = [];\r\n    this.dishes = [];\r\n    this.restaurantAdmin.getTables(this.restaurant.id).subscribe(\r\n      list => {\r\n        this.restaurantTables = list;\r\n        console.log('tables loaded:' + list.length);\r\n      },\r\n      (error) => {\r\n        console.log ('Fehler beim Laden der Tische' + error);\r\n        // error\r\n      }\r\n    );\r\n    this.restaurantAdmin.getMenuCard(this.restaurant.id).subscribe(\r\n      list => {\r\n        this.dishes = list;\r\n        console.log('dishes loaded:' + list.length);\r\n      },\r\n      (error) => {\r\n        console.log ('Fehler beim Laden der Menükarte' + error);\r\n        // error\r\n      }\r\n    );\r\n  }\r\n\r\n  restaurantTableAdded (table: RestaurantTable) {\r\n    if (table) {\r\n      this.restaurantTables = this.restaurantTables.concat([table]);\r\n    }\r\n   }\r\n\r\n   dishAdded (dish: Dish) {\r\n    if (dish) {\r\n      this.dishes = this.dishes.concat([dish]);\r\n    }\r\n   }\r\n\r\n}\r\n","module.exports = \"\\r\\n  <div class=\\\"card-deck\\\">\\r\\n\\r\\n      <div class=\\\"adminTableNumber\\\" *ngFor=\\\"let table of restaurantTables\\\">\\r\\n        <div>\\r\\n         <h5 class=\\\"card-title \\\"> Tisch {{table.tablenr}} </h5>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\"","module.exports = \"\"","import {RestaurantTable} from '../../shared/Controllers.generated';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dinner-restaurant-tables',\r\n  templateUrl: './restaurant-tables.component.html',\r\n  styleUrls: ['./restaurant-tables.component.sass']\r\n})\r\nexport class RestaurantTablesComponent implements OnInit {\r\n  @Input() restaurantId: string;\r\n  @Input() restaurantTables: RestaurantTable[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { RestaurantsComponent } from './restaurants/restaurants.component';\r\nimport { SelectRestaurantComponent } from './select-restaurant/select-restaurant.component';\r\nimport { RestaurantComponent } from './restaurant/restaurant.component';\r\nimport { SelectTableInRestaurantComponent } from './select-table-in-restaurant/select-table-in-restaurant.component';\r\nimport { SelectedTableComponent } from './selected-table/selected-table.component';\r\nimport { OrderDishComponent } from './order-dish/order-dish.component';\r\nimport { OrderStatusComponent } from './order-status/order-status.component';\r\nimport { KitchensComponent } from './kitchen/kitchens/kitchens.component';\r\nimport { KitchenComponent } from './kitchen/kitchen/kitchen.component';\r\nimport { SelectKitchenComponent } from './kitchen/select-kitchen/select-kitchen.component'; \r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'restaurants',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'restaurants', component: RestaurantsComponent,\r\n    children: [\r\n      {\r\n      path: '',\r\n      redirectTo: 'select',\r\n      pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'select',\r\n        component: SelectRestaurantComponent\r\n      },\r\n      {\r\n        path: ':restaurantId',\r\n        component: RestaurantComponent,\r\n        children: [\r\n          {\r\n            path: '',\r\n            redirectTo: 'select',\r\n            pathMatch: 'full'\r\n          },\r\n          {\r\n            path: 'select',\r\n            component: SelectTableInRestaurantComponent\r\n          },\r\n          {\r\n            path: ':tableId',\r\n            component: SelectedTableComponent,\r\n            children: [\r\n              {\r\n                path: '',\r\n                redirectTo: 'order',\r\n                pathMatch: 'full'\r\n              },\r\n              {\r\n                path: 'order',\r\n                component: OrderDishComponent\r\n              },\r\n              {\r\n                path: 'status',\r\n                component: OrderStatusComponent\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'kitchens', component: KitchensComponent,\r\n    children: [\r\n      {\r\n      path: '',\r\n      redirectTo: 'select',\r\n      pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'select',\r\n        component: SelectKitchenComponent\r\n      },\r\n      {\r\n        path: ':restaurantId',\r\n        component: KitchenComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'admin', component: AdminComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<div class=\\\"card\\\" id=\\\"header\\\"> \\r\\n  \\r\\n    <a href=\\\"http://www.bridging-it.de/\\\" class=\\\"card-img-top\\\" >\\r\\n      <img src=\\\"assets/bitlogo.png\\\"/> \\r\\n    </a><br/>\\r\\n    <h1>Microservices mit Azure Service Fabric:</h1>\\r\\n  </div>\\r\\n  \\r\\n <div class=\\\"container\\\"> \\r\\n\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light\\\">\\r\\n  <div  id=\\\"navbarSupportedContent\\\" class=\\\"col-md-12\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/kitchens']\\\">Küche</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/admin']\\\">Admin</a>\\r\\n        </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link \\\" href=\\\"http://blog.bridging-it.de/author/Tobias.Meier\\\" _target=\\\"new\\\">Weitere Infos</a>\\r\\n          <ul class=\\\"dropdown-menu\\\">\\r\\n            <a href=\\\"\\\" >: http://blog.bridging-it-de/author/Tobias.Meier</a>\\r\\n          </ul>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav> <br/>\\r\\n\\r\\n\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dinner-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent {\r\n  title = 'Service Fabric Dinner Demo';\r\n}\r\n","﻿import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule, BaseRequestOptions, RequestOptionsArgs, RequestOptions, Headers } from '@angular/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AdminRestaurantComponent } from './admin-restaurant/admin-restaurant.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AddRestaurantComponent } from './Admin/add-restaurant/add-restaurant.component';\r\nimport { API_BASE_URL, RestaurantAdminClient, AdminClient, OrderClient, RestaurantClient ,KitchenClient } from './shared/Controllers.generated';\r\nimport { RestaurantTablesComponent } from './admin/restaurant-tables/restaurant-tables.component';\r\nimport { AddRestaurantTableComponent } from './admin/add-restaurant-table/add-restaurant-table.component';\r\nimport { RestaurantDetailComponent } from './admin/restaurant-detail/restaurant-detail.component';\r\nimport { MenucardAdministrationComponent } from './admin/menucard-administration/menucard-administration.component';\r\nimport { AddDishComponent } from './admin/add-dish/add-dish.component';\r\nimport { RestaurantsComponent } from './restaurants/restaurants.component';\r\nimport { RestaurantComponent } from './restaurant/restaurant.component';\r\nimport { SelectRestaurantComponent } from './select-restaurant/select-restaurant.component';\r\nimport { SelectTableInRestaurantComponent } from './select-table-in-restaurant/select-table-in-restaurant.component';\r\nimport { SelectedTableComponent } from './selected-table/selected-table.component';\r\nimport { OrderDishComponent } from './order-dish/order-dish.component';\r\nimport { OrderStatusComponent } from './order-status/order-status.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { KitchenComponent } from './kitchen/kitchen/kitchen.component';\r\nimport { KitchensComponent } from './kitchen/kitchens/kitchens.component';\r\nimport { SelectKitchenComponent } from './kitchen/select-kitchen/select-kitchen.component'; \r\n\r\n\r\n\r\nlet API_BASE_URL2 = 'http://localhost:8328';\r\n\r\n\r\nif (window != null && window.location != null) {\r\n      const loc = window.location;\r\n      const server = loc.hostname;\r\n      let port =  loc.port;\r\n      if (server === 'localhost' && port === '4200') {\r\n        API_BASE_URL2 = \"https://localhost:8333\";\r\n      }\r\n      else {\r\n        API_BASE_URL2 = loc.protocol + '//' +  server + ':' + port;\r\n      }\r\n     \r\n}\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AdminRestaurantComponent,\r\n    AdminComponent,\r\n    AddRestaurantComponent,\r\n    RestaurantTablesComponent,\r\n    AddRestaurantTableComponent,\r\n    RestaurantDetailComponent,\r\n    MenucardAdministrationComponent,\r\n    AddDishComponent,\r\n    RestaurantsComponent,\r\n    RestaurantComponent,\r\n    SelectRestaurantComponent,\r\n    SelectTableInRestaurantComponent,\r\n    SelectedTableComponent,\r\n    OrderDishComponent,\r\n    OrderStatusComponent,\r\n     KitchenComponent,\r\n    KitchensComponent,\r\n    SelectKitchenComponent\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [AdminClient, RestaurantAdminClient, OrderClient, RestaurantClient,  KitchenClient,\r\n    {provide: API_BASE_URL, useValue: API_BASE_URL2}\r\n   ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"card-kitchen col-6\\\">\\r\\n<p><b>Offene Bestellungen:</b></p>\\r\\n<div *ngFor=\\\"let order of kitchenQueue\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h3 class=\\\"menue-title\\\">{{getDishname(order.dishId)}}</h3>    \\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"card-kitchen col-6\\\">\\r\\n<p><b> Folgende Gerichte werden gerade gekocht:</b></p>\\r\\n  <div *ngFor=\\\"let order of cookingQueue\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <h3 class=\\\"menue-title\\\">{{getDishname(order.dishId)}}</h3>    \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { RestaurantAdminClient, KitchenClient, KitchenOrder, RestaurantClient, Dish } from '../../shared/Controllers.generated';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { IntervalObservable } from 'rxjs/observable/IntervalObservable';\r\n\r\n@Component({\r\n  selector: 'dinner-kitchen',\r\n  templateUrl: './kitchen.component.html',\r\n  styleUrls: ['./kitchen.component.sass']\r\n})\r\nexport class KitchenComponent implements OnInit {  \r\n  dishMap: Map<string, Dish>;\r\n  restaurantNr: string;\r\n  kitchenQueue: KitchenOrder[];\r\n  cookingQueue: KitchenOrder[];\r\n  private subWaiting: Subscription;\r\n  private subCooking: Subscription;\r\n  private alive = true;\r\n  constructor(private route: ActivatedRoute, private kitchenClient: KitchenClient, private restaurantClient: RestaurantAdminClient) { }\r\n\r\n  ngOnInit() {\r\n    this.kitchenQueue = [];\r\n    this.cookingQueue = [];\r\n    this.restaurantNr = this.route.snapshot.params['restaurantId'];\r\n    this.restaurantClient.getMenuCard(this.restaurantNr).subscribe (\r\n      dishes=> {        \r\n        this.dishMap = new Map<string,Dish>();\r\n        dishes.forEach (\r\n          dish=> {\r\n            this.dishMap.set(dish.id, dish);\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n    \r\n\r\n    this.kitchenClient.getKitchenQueue(this.restaurantNr).subscribe(\r\n      kitchenOrders => {\r\n        this.kitchenQueue = kitchenOrders;\r\n      }\r\n    );\r\n    this.kitchenClient.getKitchenCookingQueue(this.restaurantNr).subscribe(\r\n      kitchenOrders => {\r\n        this.cookingQueue = kitchenOrders;\r\n      }\r\n    );\r\n\r\n    const that = this;\r\n\r\n    IntervalObservable.create(2000).subscribe(\r\n      data => {\r\n        if (that.subWaiting != null) {\r\n          that.subWaiting.unsubscribe();\r\n        }\r\n        that.subWaiting = that.kitchenClient.getKitchenQueue(that.restaurantNr).subscribe(\r\n          kitchenOrders => {\r\n            that.kitchenQueue = kitchenOrders;\r\n          }\r\n        );\r\n        if (that.subCooking != null) {\r\n          that.subCooking.unsubscribe();\r\n        }\r\n        that.subCooking = that.kitchenClient.getKitchenCookingQueue(that.restaurantNr).subscribe(\r\n          kitchenOrders => {\r\n            that.cookingQueue = kitchenOrders;\r\n          }\r\n        );\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  getDishname (id : string): string{\r\n    var found = this.dishMap.get(id);\r\n    if (found)\r\n      return found.name;\r\n      return id;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.alive = false;\r\n    this.subCooking.unsubscribe();\r\n    this.subWaiting.unsubscribe();\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dinner-kitchens',\r\n  templateUrl: './kitchens.component.html',\r\n  styleUrls: ['./kitchens.component.sass']\r\n})\r\nexport class KitchensComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<p><b>Bitte wählen Sie eine Küche aus.</b></p>\\r\\n\\r\\n<div class=\\\"card  mb-3\\\" style=\\\"max-width: 40rem;\\\" *ngFor=\\\"let restaurant of restaurants\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h3 class=\\\"card-title\\\">{{restaurant.name}}</h3>\\r\\n    <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/kitchens/', restaurant.id]\\\" role=\\\"button\\\">Auswählen</a>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {Restaurant, AdminClient} from '../../shared/Controllers.generated';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dinner-select-kitchen',\r\n  templateUrl: './select-kitchen.component.html',\r\n  styleUrls: ['./select-kitchen.component.sass']\r\n})\r\nexport class SelectKitchenComponent implements OnInit {\r\n\r\n  restaurants: Restaurant [];\r\n  constructor(private restaurantClient: AdminClient ) { }\r\n\r\n  ngOnInit() {\r\n    this.restaurantClient.get().subscribe (\r\n      restaurants => {\r\n        this.restaurants = restaurants;\r\n      },\r\n      (error) => {\r\n        console.log ('Restaurants konnten nicht geladen werden: ' + error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n<p><b>Bitte wählen Sie ein Gericht aus:</b></p>\\r\\n<p class=\\\"selected-message\\\">{{message}}</p>\\r\\n\\r\\n\\r\\n<div class=\\\"card col-md-3 mb-3\\\" *ngFor=\\\"let dish of dishes\\\" id=\\\"card-dish\\\">\\r\\n  \\r\\n  <div class=\\\"card-select-dish\\\">\\r\\n    <a class=\\\"btn btn-primary\\\" (click)=\\\"order(dish)\\\" role=\\\"button\\\" id=\\\"button\\\">Bestellen</a>\\r\\n    <div class=\\\"menue-text\\\">Preis: {{dish.price}} €</div>\\r\\n    <img class=\\\"card-img-top dishimg\\\" [src]=\\\"dish.imageUrl\\\" [alt]=\\\"dish.name\\\">\\r\\n    <h3 class=\\\"menue-title\\\" bg-primary> {{dish.name}}</h3>\\r\\n    <div class=\\\"menue-text\\\">{{dish.description}}</div><br/>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n</div><br/>\\r\\n </div>\\r\\n\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport {Order, OrderClient,  RestaurantAdminClient,   RestaurantClient,   Dish} from '../shared/Controllers.generated';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'dinner-order-dish',\r\n  templateUrl: './order-dish.component.html',\r\n  styleUrls: ['./order-dish.component.sass']\r\n})\r\nexport class OrderDishComponent implements OnInit {\r\n  private restaurantId: string;\r\n  private tableId: string;\r\n  dishes: Dish [];\r\n  message: string;\r\n\r\n  constructor(private route: ActivatedRoute, private restaurantClient: RestaurantClient,\r\n    private restaurantAdminClient: RestaurantAdminClient,\r\n  private orderClient: OrderClient) { }\r\n\r\n  ngOnInit() {\r\n    this.dishes = [];\r\n    this.restaurantId = this.route.snapshot.parent.parent.params['restaurantId'];\r\n    this.tableId = this.route.snapshot.parent.params['tableId'];\r\n\r\n    this.restaurantAdminClient.getMenuCard (this.restaurantId).subscribe (\r\n      dishes => {\r\n          this.dishes = dishes;\r\n      },\r\n      error => {\r\n        console.log (error);\r\n      }\r\n    );\r\n  }\r\n\r\n  order (dish: Dish) {\r\n    this.message = 'Bestellung starten';\r\n    const order =  new Order();\r\n    order.dishId = dish.id;\r\n    order.price = dish.price;\r\n    order.tableId = this.tableId;\r\n    order.restaurantId = this.restaurantId;\r\n    const that = this;\r\n    this.orderClient.create(order).subscribe (\r\n      orderresult => {\r\n        that.message =  dish.name + ' ist bestellt! Order id ' + orderresult.orderId + ' State: ' + orderresult.orderState;\r\n      },\r\n      error => {\r\n        console.log ('Bestellung konnte nicht abgegeben werden!' + error);\r\n        that.message = 'Bestellung konnte nicht abgegeben werden!' + error;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\"> \\r\\n  <p><b>Getätigte Bestellungen</b></p>\\r\\n  <div class=\\\"card col-md-5 mb-3\\\" *ngFor=\\\"let order of orders\\\">\\r\\n    <h3 class=\\\"menue-title\\\">{{order.dish}}: {{order.state}}</h3>\\r\\n    <span class=\\\"menue-text\\\">{{order.price}} €</span>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { OrderClient, RestaurantClient, TableOrder } from '../shared/Controllers.generated';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n@Component({\r\n  selector: 'dinner-order-status',\r\n  templateUrl: './order-status.component.html',\r\n  styleUrls: ['./order-status.component.sass']\r\n})\r\nexport class OrderStatusComponent implements OnInit {\r\n\r\n  restaurantId: string;\r\n  tableId: string;\r\n  orders: TableOrder[] = [];\r\n  constructor(private route: ActivatedRoute, private restaurantClient: RestaurantClient,\r\n    private orderClient: OrderClient) { }\r\n\r\n  ngOnInit() {\r\n    this.restaurantId = this.route.snapshot.parent.parent.params['restaurantId'];\r\n    this.tableId = this.route.snapshot.parent.params['tableId'];\r\n    const that = this;\r\n    this.orderClient.getOrders(that.tableId).subscribe(\r\n      orders => {\r\n        that.orders = orders;\r\n      },\r\n      error => {\r\n        console.log('Fehler beim Laden der Bestellungen des Tisches: ' + error);\r\n      }\r\n    );\r\n\r\n    Observable.timer(10, 10).subscribe(\r\n      data => {\r\n        that.orderClient.getOrders(that.tableId).subscribe(\r\n          orders => {\r\n            that.orders = orders;\r\n          },\r\n          error => {\r\n            console.log('Fehler beim Laden der Bestellungen des Tisches: ' + error);\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n<h2 *ngIf=\\\"restaurant!=null\\\" class=\\\"selected\\\">Restaurant: {{restaurant.name}}</h2><br/>\\r\\n</div>\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {Restaurant, RestaurantClient} from '../shared/Controllers.generated';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'dinner-restaurant',\r\n  templateUrl: './restaurant.component.html',\r\n  styleUrls: ['./restaurant.component.sass']\r\n})\r\nexport class RestaurantComponent implements OnInit {\r\n\r\n  restaurantNr: string;\r\n  restaurant: Restaurant;\r\n  constructor ( private route: ActivatedRoute, private restaurantClient: RestaurantClient ) { }\r\n\r\n  ngOnInit() {\r\n    this.restaurantNr = this.route.snapshot.params['restaurantId'];\r\n    this.restaurantClient.get(this.restaurantNr).subscribe (\r\n      (restaurant) => {\r\n        this.restaurant = restaurant;\r\n      },\r\n      (error) => {\r\n        console.log ('Fehler beim Laden des Restaurants');\r\n      }\r\n    );\r\n}\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\"","import { Restaurant, AdminClient } from '../shared/Controllers.generated';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'dinner-restaurants',\r\n  templateUrl: './restaurants.component.html',\r\n  styleUrls: ['./restaurants.component.sass']\r\n})\r\nexport class RestaurantsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n  <p><b>Bitte wählen Sie ein Restaurant aus.</b></p>\\r\\n\\r\\n  <div class=\\\"card col-5  mb-3\\\" *ngFor=\\\"let restaurant of restaurants\\\">\\r\\n    <div class=\\\"card-select\\\">\\r\\n      <h3 class=\\\"card-title\\\">{{restaurant.name}}</h3>\\r\\n      <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/restaurants/', restaurant.id]\\\" role=\\\"button\\\">Auswählen</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {AdminClient, Restaurant} from '../shared/Controllers.generated';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dinner-select-restaurant',\r\n  templateUrl: './select-restaurant.component.html',\r\n  styleUrls: ['./select-restaurant.component.sass']\r\n})\r\nexport class SelectRestaurantComponent implements OnInit {\r\n\r\n  restaurants: Restaurant [];\r\n  constructor(private restaurantClient: AdminClient ) { }\r\n\r\n  ngOnInit() {\r\n    this.restaurantClient.get().subscribe (\r\n      restaurants => {\r\n        this.restaurants = restaurants;\r\n      },\r\n      (error) => {\r\n        console.log ('Restaurants konnten nicht geladen werden: ' + error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n<p><b>Bitte wählen Sie einen Tisch aus.</b></p>\\r\\n<div class=\\\"row\\\"> \\r\\n  \\r\\n  <div class=\\\"card col-md-5 mb-3\\\" *ngFor=\\\"let table of tables\\\">\\r\\n    <div class=\\\"card-select\\\">\\r\\n      <h3 class=\\\"card-title\\\">Tisch {{table.tablenr}}</h3>\\r\\n      <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/restaurants/', restaurantId, table.id]\\\"  role=\\\"button\\\">Auswählen</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { RestaurantAdminClient, RestaurantTable } from '../shared/Controllers.generated';\r\n\r\n@Component({\r\n  selector: 'dinner-select-table-in-restaurant',\r\n  templateUrl: './select-table-in-restaurant.component.html',\r\n  styleUrls: ['./select-table-in-restaurant.component.sass']\r\n})\r\nexport class SelectTableInRestaurantComponent implements OnInit {\r\n  restaurantId: string;\r\n  tables: RestaurantTable [];\r\n  constructor(private route: ActivatedRoute, private restaurantAdminClient: RestaurantAdminClient) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.tables = [];\r\n    this.restaurantId = this.route.snapshot.parent.params['restaurantId'];\r\n    this.restaurantAdminClient.getTables(this.restaurantId).subscribe (\r\n      tables => {\r\n        this.tables = tables;\r\n      },\r\n      (error) => {\r\n        console.log (error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","module.exports = \"<p *ngIf=\\\"table == true\\\">\\r\\n  Willkommen am Tisch {{table.tablenr}}\\r\\n</p>\\r\\n<div class=\\\"container\\\">  \\r\\n  <a routerLink=\\\"order\\\" class=\\\"btn btn-primary\\\">Gericht auswählen</a> &nbsp;&nbsp;\\r\\n  <a routerLink=\\\"status\\\" class=\\\"btn btn-primary\\\">Bestellungen</a>\\r\\n  \\r\\n</div><br/>\\r\\n\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport {RestaurantTable, RestaurantClient} from '../shared/Controllers.generated';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'dinner-selected-table',\r\n  templateUrl: './selected-table.component.html',\r\n  styleUrls: ['./selected-table.component.sass']\r\n})\r\nexport class SelectedTableComponent implements OnInit {\r\n\r\n  restaurantId: string;\r\n  tableId: string;\r\n  table: RestaurantTable;\r\n  constructor(private route: ActivatedRoute, private restaurantClient: RestaurantClient) { }\r\n\r\n  ngOnInit() {\r\n    this.restaurantId = this.route.snapshot.parent.params['restaurantId'];\r\n    this.tableId = this.route.snapshot.params['tableId'];\r\n    this.restaurantClient.getTable (this.restaurantId, this.tableId).subscribe(\r\n      table => {\r\n        this.table = table;\r\n      },\r\n      error => {\r\n        console.log('Error beim Laden der Table');\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","﻿/* tslint:disable */\n//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v11.20.1.0 (NJsonSchema v9.11.0.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n// ReSharper disable InconsistentNaming\n\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\n\nexport interface IAdminClient {\n    get(): Observable<Restaurant[] | null>;\n    create(restaurant: Restaurant | null): Observable<Restaurant | null>;\n}\n\n@Injectable()\nexport class AdminClient implements IAdminClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    get(): Observable<Restaurant[] | null> {\n        let url_ = this.baseUrl + \"/api/Admin/Get\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<Restaurant[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<Restaurant[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<Restaurant[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(Restaurant.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<Restaurant[] | null>(<any>null);\n    }\n\n    create(restaurant: Restaurant | null): Observable<Restaurant | null> {\n        let url_ = this.baseUrl + \"/api/Admin/Create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(restaurant);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<Restaurant | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<Restaurant | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<Restaurant | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Restaurant.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<Restaurant | null>(<any>null);\n    }\n}\n\nexport interface IOrderClient {\n    create(order: Order | null): Observable<Order | null>;\n    getOrder(orderId: string): Observable<Order | null>;\n    getOrders(tableId: string): Observable<TableOrder[] | null>;\n}\n\n@Injectable()\nexport class OrderClient implements IOrderClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    create(order: Order | null): Observable<Order | null> {\n        let url_ = this.baseUrl + \"/api/Order\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(order);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(<any>response_);\n                } catch (e) {\n                    return <Observable<Order | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<Order | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<Order | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Order.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<Order | null>(<any>null);\n    }\n\n    getOrder(orderId: string): Observable<Order | null> {\n        let url_ = this.baseUrl + \"/api/Order/GetOrder/{orderId}\";\n        if (orderId === undefined || orderId === null)\n            throw new Error(\"The parameter 'orderId' must be defined.\");\n        url_ = url_.replace(\"{orderId}\", encodeURIComponent(\"\" + orderId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetOrder(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetOrder(<any>response_);\n                } catch (e) {\n                    return <Observable<Order | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<Order | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetOrder(response: HttpResponseBase): Observable<Order | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Order.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<Order | null>(<any>null);\n    }\n\n    getOrders(tableId: string): Observable<TableOrder[] | null> {\n        let url_ = this.baseUrl + \"/api/Order/GetOrders/{tableId}\";\n        if (tableId === undefined || tableId === null)\n            throw new Error(\"The parameter 'tableId' must be defined.\");\n        url_ = url_.replace(\"{tableId}\", encodeURIComponent(\"\" + tableId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetOrders(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetOrders(<any>response_);\n                } catch (e) {\n                    return <Observable<TableOrder[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<TableOrder[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetOrders(response: HttpResponseBase): Observable<TableOrder[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(TableOrder.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<TableOrder[] | null>(<any>null);\n    }\n}\n\nexport interface IRestaurantAdminClient {\n    getMenuCard(restaurantId: string): Observable<Dish[] | null>;\n    addDish(restaurantId: string, dish: Dish | null): Observable<Dish | null>;\n    createTable(restaurantId: string, table: RestaurantTable | null): Observable<RestaurantTable | null>;\n    getTables(restaurantId: string): Observable<RestaurantTable[] | null>;\n}\n\n@Injectable()\nexport class RestaurantAdminClient implements IRestaurantAdminClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    getMenuCard(restaurantId: string): Observable<Dish[] | null> {\n        let url_ = this.baseUrl + \"/api/RestaurantAdmin/{restaurantId}\";\n        if (restaurantId === undefined || restaurantId === null)\n            throw new Error(\"The parameter 'restaurantId' must be defined.\");\n        url_ = url_.replace(\"{restaurantId}\", encodeURIComponent(\"\" + restaurantId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetMenuCard(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetMenuCard(<any>response_);\n                } catch (e) {\n                    return <Observable<Dish[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<Dish[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetMenuCard(response: HttpResponseBase): Observable<Dish[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(Dish.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<Dish[] | null>(<any>null);\n    }\n\n    addDish(restaurantId: string, dish: Dish | null): Observable<Dish | null> {\n        let url_ = this.baseUrl + \"/api/RestaurantAdmin/{restaurantId}\";\n        if (restaurantId === undefined || restaurantId === null)\n            throw new Error(\"The parameter 'restaurantId' must be defined.\");\n        url_ = url_.replace(\"{restaurantId}\", encodeURIComponent(\"\" + restaurantId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(dish);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processAddDish(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAddDish(<any>response_);\n                } catch (e) {\n                    return <Observable<Dish | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<Dish | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processAddDish(response: HttpResponseBase): Observable<Dish | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Dish.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<Dish | null>(<any>null);\n    }\n\n    createTable(restaurantId: string, table: RestaurantTable | null): Observable<RestaurantTable | null> {\n        let url_ = this.baseUrl + \"/api/RestaurantAdmin/CreateTable/{restaurantId}\";\n        if (restaurantId === undefined || restaurantId === null)\n            throw new Error(\"The parameter 'restaurantId' must be defined.\");\n        url_ = url_.replace(\"{restaurantId}\", encodeURIComponent(\"\" + restaurantId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(table);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreateTable(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreateTable(<any>response_);\n                } catch (e) {\n                    return <Observable<RestaurantTable | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<RestaurantTable | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processCreateTable(response: HttpResponseBase): Observable<RestaurantTable | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? RestaurantTable.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RestaurantTable | null>(<any>null);\n    }\n\n    getTables(restaurantId: string): Observable<RestaurantTable[] | null> {\n        let url_ = this.baseUrl + \"/api/RestaurantAdmin/GetTables/{restaurantId}\";\n        if (restaurantId === undefined || restaurantId === null)\n            throw new Error(\"The parameter 'restaurantId' must be defined.\");\n        url_ = url_.replace(\"{restaurantId}\", encodeURIComponent(\"\" + restaurantId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetTables(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetTables(<any>response_);\n                } catch (e) {\n                    return <Observable<RestaurantTable[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<RestaurantTable[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetTables(response: HttpResponseBase): Observable<RestaurantTable[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(RestaurantTable.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RestaurantTable[] | null>(<any>null);\n    }\n}\n\nexport interface IRestaurantClient {\n    get(restaurantId: string): Observable<Restaurant | null>;\n    getTable(restaurantId: string, tableId: string): Observable<RestaurantTable | null>;\n}\n\n@Injectable()\nexport class RestaurantClient implements IRestaurantClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    get(restaurantId: string): Observable<Restaurant | null> {\n        let url_ = this.baseUrl + \"/api/Restaurant/Get/{restaurantId}\";\n        if (restaurantId === undefined || restaurantId === null)\n            throw new Error(\"The parameter 'restaurantId' must be defined.\");\n        url_ = url_.replace(\"{restaurantId}\", encodeURIComponent(\"\" + restaurantId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(<any>response_);\n                } catch (e) {\n                    return <Observable<Restaurant | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<Restaurant | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<Restaurant | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? Restaurant.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<Restaurant | null>(<any>null);\n    }\n\n    getTable(restaurantId: string, tableId: string): Observable<RestaurantTable | null> {\n        let url_ = this.baseUrl + \"/api/Restaurant/GetTable/{restaurantId}/{tableId}\";\n        if (restaurantId === undefined || restaurantId === null)\n            throw new Error(\"The parameter 'restaurantId' must be defined.\");\n        url_ = url_.replace(\"{restaurantId}\", encodeURIComponent(\"\" + restaurantId)); \n        if (tableId === undefined || tableId === null)\n            throw new Error(\"The parameter 'tableId' must be defined.\");\n        url_ = url_.replace(\"{tableId}\", encodeURIComponent(\"\" + tableId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetTable(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetTable(<any>response_);\n                } catch (e) {\n                    return <Observable<RestaurantTable | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<RestaurantTable | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetTable(response: HttpResponseBase): Observable<RestaurantTable | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 ? RestaurantTable.fromJS(resultData200) : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RestaurantTable | null>(<any>null);\n    }\n}\n\nexport interface IKitchenClient {\n    getKitchenQueue(restaurantId: string): Observable<KitchenOrder[] | null>;\n    getKitchenCookingQueue(restaurantId: string): Observable<KitchenOrder[] | null>;\n}\n\n@Injectable()\nexport class KitchenClient implements IKitchenClient {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    getKitchenQueue(restaurantId: string): Observable<KitchenOrder[] | null> {\n        let url_ = this.baseUrl + \"/api/Kitchen/{restaurantId}/KitchenQueue\";\n        if (restaurantId === undefined || restaurantId === null)\n            throw new Error(\"The parameter 'restaurantId' must be defined.\");\n        url_ = url_.replace(\"{restaurantId}\", encodeURIComponent(\"\" + restaurantId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetKitchenQueue(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetKitchenQueue(<any>response_);\n                } catch (e) {\n                    return <Observable<KitchenOrder[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<KitchenOrder[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetKitchenQueue(response: HttpResponseBase): Observable<KitchenOrder[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(KitchenOrder.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<KitchenOrder[] | null>(<any>null);\n    }\n\n    getKitchenCookingQueue(restaurantId: string): Observable<KitchenOrder[] | null> {\n        let url_ = this.baseUrl + \"/api/Kitchen/{restaurantId}/KitchenCookingQueue\";\n        if (restaurantId === undefined || restaurantId === null)\n            throw new Error(\"The parameter 'restaurantId' must be defined.\");\n        url_ = url_.replace(\"{restaurantId}\", encodeURIComponent(\"\" + restaurantId)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetKitchenCookingQueue(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetKitchenCookingQueue(<any>response_);\n                } catch (e) {\n                    return <Observable<KitchenOrder[] | null>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<KitchenOrder[] | null>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetKitchenCookingQueue(response: HttpResponseBase): Observable<KitchenOrder[] | null> {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (resultData200 && resultData200.constructor === Array) {\n                result200 = [];\n                for (let item of resultData200)\n                    result200.push(KitchenOrder.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<KitchenOrder[] | null>(<any>null);\n    }\n}\n\nexport class Restaurant implements IRestaurant {\n    name?: string | undefined;\n    id!: string;\n\n    constructor(data?: IRestaurant) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.name = data[\"name\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Restaurant {\n        data = typeof data === 'object' ? data : {};\n        let result = new Restaurant();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"name\"] = this.name;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IRestaurant {\n    name?: string | undefined;\n    id: string;\n}\n\nexport class Order implements IOrder {\n    restaurantId!: string;\n    orderId!: string;\n    tableId!: string;\n    dishId!: string;\n    price!: number;\n    orderTime?: Date | undefined;\n    servedTime?: Date | undefined;\n    orderState!: OrderState;\n\n    constructor(data?: IOrder) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.restaurantId = data[\"restaurantId\"];\n            this.orderId = data[\"orderId\"];\n            this.tableId = data[\"tableId\"];\n            this.dishId = data[\"dishId\"];\n            this.price = data[\"price\"];\n            this.orderTime = data[\"orderTime\"] ? new Date(data[\"orderTime\"].toString()) : <any>undefined;\n            this.servedTime = data[\"servedTime\"] ? new Date(data[\"servedTime\"].toString()) : <any>undefined;\n            this.orderState = data[\"orderState\"];\n        }\n    }\n\n    static fromJS(data: any): Order {\n        data = typeof data === 'object' ? data : {};\n        let result = new Order();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"restaurantId\"] = this.restaurantId;\n        data[\"orderId\"] = this.orderId;\n        data[\"tableId\"] = this.tableId;\n        data[\"dishId\"] = this.dishId;\n        data[\"price\"] = this.price;\n        data[\"orderTime\"] = this.orderTime ? this.orderTime.toISOString() : <any>undefined;\n        data[\"servedTime\"] = this.servedTime ? this.servedTime.toISOString() : <any>undefined;\n        data[\"orderState\"] = this.orderState;\n        return data; \n    }\n}\n\nexport interface IOrder {\n    restaurantId: string;\n    orderId: string;\n    tableId: string;\n    dishId: string;\n    price: number;\n    orderTime?: Date | undefined;\n    servedTime?: Date | undefined;\n    orderState: OrderState;\n}\n\nexport enum OrderState {\n    None = 0, \n    Ordered = 1, \n    InKitchenQueue = 2, \n    Cooking = 3, \n    Cooked = 4, \n    Served = 5, \n    Payed = 6, \n}\n\nexport class TableOrder implements ITableOrder {\n    orderId!: string;\n    price!: number;\n    servedAt?: Date | undefined;\n    dish?: string | undefined;\n    state?: string | undefined;\n\n    constructor(data?: ITableOrder) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.orderId = data[\"orderId\"];\n            this.price = data[\"price\"];\n            this.servedAt = data[\"servedAt\"] ? new Date(data[\"servedAt\"].toString()) : <any>undefined;\n            this.dish = data[\"dish\"];\n            this.state = data[\"state\"];\n        }\n    }\n\n    static fromJS(data: any): TableOrder {\n        data = typeof data === 'object' ? data : {};\n        let result = new TableOrder();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"orderId\"] = this.orderId;\n        data[\"price\"] = this.price;\n        data[\"servedAt\"] = this.servedAt ? this.servedAt.toISOString() : <any>undefined;\n        data[\"dish\"] = this.dish;\n        data[\"state\"] = this.state;\n        return data; \n    }\n}\n\nexport interface ITableOrder {\n    orderId: string;\n    price: number;\n    servedAt?: Date | undefined;\n    dish?: string | undefined;\n    state?: string | undefined;\n}\n\nexport class Dish implements IDish {\n    name?: string | undefined;\n    price!: number;\n    id!: string;\n    description?: string | undefined;\n    imageUrl?: string | undefined;\n\n    constructor(data?: IDish) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.name = data[\"name\"];\n            this.price = data[\"price\"];\n            this.id = data[\"id\"];\n            this.description = data[\"description\"];\n            this.imageUrl = data[\"imageUrl\"];\n        }\n    }\n\n    static fromJS(data: any): Dish {\n        data = typeof data === 'object' ? data : {};\n        let result = new Dish();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"name\"] = this.name;\n        data[\"price\"] = this.price;\n        data[\"id\"] = this.id;\n        data[\"description\"] = this.description;\n        data[\"imageUrl\"] = this.imageUrl;\n        return data; \n    }\n}\n\nexport interface IDish {\n    name?: string | undefined;\n    price: number;\n    id: string;\n    description?: string | undefined;\n    imageUrl?: string | undefined;\n}\n\nexport class RestaurantTable implements IRestaurantTable {\n    tablenr!: number;\n    id!: string;\n\n    constructor(data?: IRestaurantTable) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.tablenr = data[\"tablenr\"];\n            this.id = data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): RestaurantTable {\n        data = typeof data === 'object' ? data : {};\n        let result = new RestaurantTable();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"tablenr\"] = this.tablenr;\n        data[\"id\"] = this.id;\n        return data; \n    }\n}\n\nexport interface IRestaurantTable {\n    tablenr: number;\n    id: string;\n}\n\nexport class KitchenOrder implements IKitchenOrder {\n    orderId!: string;\n    dishId!: string;\n\n    constructor(data?: IKitchenOrder) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(data?: any) {\n        if (data) {\n            this.orderId = data[\"orderId\"];\n            this.dishId = data[\"dishId\"];\n        }\n    }\n\n    static fromJS(data: any): KitchenOrder {\n        data = typeof data === 'object' ? data : {};\n        let result = new KitchenOrder();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"orderId\"] = this.orderId;\n        data[\"dishId\"] = this.dishId;\n        return data; \n    }\n}\n\nexport interface IKitchenOrder {\n    orderId: string;\n    dishId: string;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\n    return _observableThrow(new SwaggerException(message, status, response, headers, result));\n}\n\nfunction blobToText(blob: any): Observable<string> {\n    return new Observable<string>((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = function() { \n                observer.next(this.result);\n                observer.complete();\n            }\n            reader.readAsText(blob); \n        }\n    });\n}","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}